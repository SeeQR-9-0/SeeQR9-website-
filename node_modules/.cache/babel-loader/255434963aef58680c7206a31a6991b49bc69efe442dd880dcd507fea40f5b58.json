{"ast":null,"code":"import { __rest } from 'tslib';\nimport { jsx } from '@emotion/react/jsx-runtime';\nimport { Children, createRef, useRef, useCallback, cloneElement, useMemo, isValidElement, useContext } from 'react';\nimport { createRoutesFromElements, useLocation, useRoutes, Route, UNSAFE_RouteContext, matchRoutes } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { css } from '@emotion/react';\nconst getTransformStyles = (transformFn, max) => `\n  // back\n  & > .back-enter {\n    transform: ${transformFn}(-${max});\n  }\n  & > .back-enter-active {\n    transform: ${transformFn}(0);\n  }\n  & > .back-exit {\n    transform: ${transformFn}(0);\n  }\n  & > .back-exit-active {\n    transform: ${transformFn}(${max});\n  }\n\n  // forward\n  & > .forward-enter {\n    transform: ${transformFn}(${max});\n  }\n  & > .forward-enter-active {\n    transform: ${transformFn}(0);\n  }\n  & > .forward-exit {\n    transform: ${transformFn}(0);\n  }\n  & > .forward-exit-active {\n    transform: ${transformFn}(-${max});\n  }\n`;\nconst getTransitionGroupCss = (duration, timing, direction) => css`\n  display: grid;\n\n  & > .item {\n    grid-area: 1 / 1 / 2 / 2;\n\n    &:not(:only-child) {\n      &.${direction}-enter-active, &.${direction}-exit-active {\n        transition: transform ${duration}ms ${timing};\n      }\n    }\n  }\n\n  &.slide {\n    overflow: hidden;\n    ${getTransformStyles('translateX', '100%')}\n  }\n\n  &.vertical-slide {\n    overflow: hidden;\n    ${getTransformStyles('translateY', '100%')}\n  }\n\n  &.rotate {\n    perspective: 2000px;\n    & > .item {\n      backface-visibility: hidden;\n    }\n    ${getTransformStyles('rotateY', '180deg')}\n  }\n`;\nconst isRouteElement = element => {\n  return isValidElement(element) && element.type === Route;\n};\n// from useRoutes:\n// https://github.com/remix-run/react-router/blob/f3d3e05ec00c6950720930beaf74fecbaf9dc5b6/packages/react-router/lib/hooks.tsx#L302\nconst useNextPath = function () {\n  let pathname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const {\n    matches: parentMatches\n  } = useContext(UNSAFE_RouteContext);\n  const routeMatch = parentMatches[parentMatches.length - 1];\n  const parentPathnameBase = routeMatch ? routeMatch.pathnameBase : '/';\n  return parentPathnameBase === '/' ? pathname : pathname.slice(parentPathnameBase.length) || '/';\n};\nconst getMatch = (routes, pathname) => {\n  const matches = matchRoutes(routes, pathname);\n  if (matches === null) {\n    throw new Error(`Route ${pathname} does not match`);\n  }\n  const index = routes.findIndex(route => {\n    return matches.some(match => match.route === route);\n  });\n  return {\n    index,\n    route: routes[index]\n  };\n};\nconst SlideRoutes = props => {\n  var _a;\n  const {\n    animation = 'slide',\n    duration = 200,\n    timing = 'ease',\n    destroy = true,\n    compare,\n    children\n  } = props;\n  // routes\n  const routeElements = Children.map(children, child => {\n    if (!isRouteElement(child)) {\n      return child;\n    }\n    const _a = child.props,\n      {\n        element\n      } = _a,\n      restProps = __rest(_a, [\"element\"]);\n    if (!element) {\n      return child;\n    }\n    const nodeRef = createRef();\n    const newElement = jsx(\"div\", Object.assign({\n      className: \"item\",\n      ref: nodeRef\n    }, {\n      children: element\n    }));\n    return Object.assign(Object.assign({}, child), {\n      props: Object.assign(Object.assign({}, restProps), {\n        element: newElement\n      })\n    });\n  });\n  const routes = createRoutesFromElements(routeElements);\n  if (compare) {\n    routes.sort(compare);\n  }\n  const location = useLocation();\n  const routeList = useRoutes(routes, location);\n  // direction\n  const nextPath = useNextPath(location.pathname);\n  const prevPath = useRef(null);\n  const direction = useRef('undirected');\n  const nextMatch = getMatch(routes, nextPath);\n  if (prevPath.current && prevPath.current !== nextPath) {\n    const prevMatch = getMatch(routes, prevPath.current);\n    const indexDiff = nextMatch.index - prevMatch.index;\n    if (indexDiff > 0) {\n      direction.current = 'forward';\n    } else if (indexDiff < 0) {\n      direction.current = 'back';\n    } else if (indexDiff === 0) {\n      direction.current = 'undirected';\n    }\n  }\n  prevPath.current = nextPath;\n  // props\n  const childFactory = useCallback(child => cloneElement(child, {\n    classNames: direction.current\n  }), []);\n  const cssTransitionProps = useMemo(() => destroy ? {\n    timeout: duration\n  } : {\n    addEndListener() {}\n  }, [destroy, duration]);\n  return jsx(TransitionGroup, Object.assign({\n    className: `slide-routes ${animation}`,\n    childFactory: childFactory,\n    css: getTransitionGroupCss(duration, timing, direction.current)\n  }, {\n    children: jsx(CSSTransition, Object.assign({\n      nodeRef: nextMatch.route.element.ref\n    }, cssTransitionProps, {\n      children: routeList\n    }), (_a = nextMatch.route.path) !== null && _a !== void 0 ? _a : nextMatch.index)\n  }));\n};\nexport { SlideRoutes as default };","map":{"version":3,"names":["__rest","jsx","Children","createRef","useRef","useCallback","cloneElement","useMemo","isValidElement","useContext","createRoutesFromElements","useLocation","useRoutes","Route","UNSAFE_RouteContext","matchRoutes","TransitionGroup","CSSTransition","css","getTransformStyles","transformFn","max","getTransitionGroupCss","duration","timing","direction","isRouteElement","element","type","useNextPath","pathname","matches","parentMatches","routeMatch","length","parentPathnameBase","pathnameBase","slice","getMatch","routes","Error","index","findIndex","route","some","match","SlideRoutes","props","_a","animation","destroy","compare","children","routeElements","map","child","restProps","nodeRef","newElement","Object","assign","className","ref","sort","location","routeList","nextPath","prevPath","nextMatch","current","prevMatch","indexDiff","childFactory","classNames","cssTransitionProps","timeout","addEndListener","path","default"],"sources":["/Users/utkarshuppal/Documents/GitHub/SeeQR9-website-/node_modules/react-slide-routes/dist/react-slide-routes.esm.js"],"sourcesContent":["import { __rest } from 'tslib';\nimport { jsx } from '@emotion/react/jsx-runtime';\nimport { Children, createRef, useRef, useCallback, cloneElement, useMemo, isValidElement, useContext } from 'react';\nimport { createRoutesFromElements, useLocation, useRoutes, Route, UNSAFE_RouteContext, matchRoutes } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { css } from '@emotion/react';\n\nconst getTransformStyles = (transformFn, max) => `\n  // back\n  & > .back-enter {\n    transform: ${transformFn}(-${max});\n  }\n  & > .back-enter-active {\n    transform: ${transformFn}(0);\n  }\n  & > .back-exit {\n    transform: ${transformFn}(0);\n  }\n  & > .back-exit-active {\n    transform: ${transformFn}(${max});\n  }\n\n  // forward\n  & > .forward-enter {\n    transform: ${transformFn}(${max});\n  }\n  & > .forward-enter-active {\n    transform: ${transformFn}(0);\n  }\n  & > .forward-exit {\n    transform: ${transformFn}(0);\n  }\n  & > .forward-exit-active {\n    transform: ${transformFn}(-${max});\n  }\n`;\nconst getTransitionGroupCss = (duration, timing, direction) => css `\n  display: grid;\n\n  & > .item {\n    grid-area: 1 / 1 / 2 / 2;\n\n    &:not(:only-child) {\n      &.${direction}-enter-active, &.${direction}-exit-active {\n        transition: transform ${duration}ms ${timing};\n      }\n    }\n  }\n\n  &.slide {\n    overflow: hidden;\n    ${getTransformStyles('translateX', '100%')}\n  }\n\n  &.vertical-slide {\n    overflow: hidden;\n    ${getTransformStyles('translateY', '100%')}\n  }\n\n  &.rotate {\n    perspective: 2000px;\n    & > .item {\n      backface-visibility: hidden;\n    }\n    ${getTransformStyles('rotateY', '180deg')}\n  }\n`;\nconst isRouteElement = (element) => {\n    return isValidElement(element) && element.type === Route;\n};\n// from useRoutes:\n// https://github.com/remix-run/react-router/blob/f3d3e05ec00c6950720930beaf74fecbaf9dc5b6/packages/react-router/lib/hooks.tsx#L302\nconst useNextPath = (pathname = '') => {\n    const { matches: parentMatches } = useContext(UNSAFE_RouteContext);\n    const routeMatch = parentMatches[parentMatches.length - 1];\n    const parentPathnameBase = routeMatch ? routeMatch.pathnameBase : '/';\n    return parentPathnameBase === '/'\n        ? pathname\n        : pathname.slice(parentPathnameBase.length) || '/';\n};\nconst getMatch = (routes, pathname) => {\n    const matches = matchRoutes(routes, pathname);\n    if (matches === null) {\n        throw new Error(`Route ${pathname} does not match`);\n    }\n    const index = routes.findIndex((route) => {\n        return matches.some((match) => match.route === route);\n    });\n    return { index, route: routes[index] };\n};\nconst SlideRoutes = (props) => {\n    var _a;\n    const { animation = 'slide', duration = 200, timing = 'ease', destroy = true, compare, children, } = props;\n    // routes\n    const routeElements = Children.map(children, (child) => {\n        if (!isRouteElement(child)) {\n            return child;\n        }\n        const _a = child.props, { element } = _a, restProps = __rest(_a, [\"element\"]);\n        if (!element) {\n            return child;\n        }\n        const nodeRef = createRef();\n        const newElement = (jsx(\"div\", Object.assign({ className: \"item\", ref: nodeRef }, { children: element })));\n        return Object.assign(Object.assign({}, child), { props: Object.assign(Object.assign({}, restProps), { element: newElement }) });\n    });\n    const routes = createRoutesFromElements(routeElements);\n    if (compare) {\n        routes.sort(compare);\n    }\n    const location = useLocation();\n    const routeList = useRoutes(routes, location);\n    // direction\n    const nextPath = useNextPath(location.pathname);\n    const prevPath = useRef(null);\n    const direction = useRef('undirected');\n    const nextMatch = getMatch(routes, nextPath);\n    if (prevPath.current && prevPath.current !== nextPath) {\n        const prevMatch = getMatch(routes, prevPath.current);\n        const indexDiff = nextMatch.index - prevMatch.index;\n        if (indexDiff > 0) {\n            direction.current = 'forward';\n        }\n        else if (indexDiff < 0) {\n            direction.current = 'back';\n        }\n        else if (indexDiff === 0) {\n            direction.current = 'undirected';\n        }\n    }\n    prevPath.current = nextPath;\n    // props\n    const childFactory = useCallback((child) => cloneElement(child, { classNames: direction.current }), []);\n    const cssTransitionProps = useMemo(() => (destroy ? { timeout: duration } : { addEndListener() { } }), [destroy, duration]);\n    return (jsx(TransitionGroup, Object.assign({ className: `slide-routes ${animation}`, childFactory: childFactory, css: getTransitionGroupCss(duration, timing, direction.current) }, { children: jsx(CSSTransition, Object.assign({ nodeRef: nextMatch.route.element.ref }, cssTransitionProps, { children: routeList }), (_a = nextMatch.route.path) !== null && _a !== void 0 ? _a : nextMatch.index) })));\n};\n\nexport { SlideRoutes as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}